if (isBuildModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {

        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        resourcePrefix "order_module_"  //不同module的资源前缀

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //分包 显示modulename
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    resourcePrefix 'order_module_'   //不同module的资源前缀
    //不同情况选择不同的xml文件
    sourceSets {
        main {
            if (isBuildModule.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
            }
        }
    }
}


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath rootProject.ext.classpath["butterknife-gradle-plugin"]

        classpath rootProject.ext.classpath["tools-build-gradle"]
    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    androidTestCompile('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile rootProject.ext.dependencies["junit"]
    compile project(':CommonBusinessLibrary')
    //ARouter
    annotationProcessor rootProject.ext.dependencies["ARouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

}
